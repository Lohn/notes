<?xml version="1.0" encoding="ISO-8859-1"?><!-- OPML generated by OPML Editor v10.1a15 on Wed, 10 Oct 2007 04:49:18 GMT -->
<opml version="1.1">	<head>		<title>09.opml</title>		<dateCreated>Tue, 09 Oct 2007 14:26:18 GMT</dateCreated>		<dateModified>Wed, 10 Oct 2007 04:49:18 GMT</dateModified>		<ownerName>l.m.orchard</ownerName>		<ownerEmail>l.m.orchard@pobox.com</ownerEmail>		<expansionState></expansionState>		<vertScrollState>1</vertScrollState>		<windowTop>127</windowTop>		<windowLeft>415</windowLeft>		<windowBottom>862</windowBottom>		<windowRight>1035</windowRight>		</head>	<body>		<outline text="Hello world.  Gradually easing back into more tinkering, remembering the cardinal rule:  Scratch an itch." created="Tue, 09 Oct 2007 14:26:18 GMT"/>		<outline text="I've amassed &lt;a href=&quot;http://del.icio.us/deusx&quot;&gt;9681 bookmarks on del.icio.us&lt;/a&gt; as of right now.  Quick napkin calculation:  I post an average of 7 bookmarks a day, over my lifetime of 1353 days using the site.  Within the next 45 days or so, I should reach 10000 bookmarks at this rate.  I wonder if I should throw a party?" created="Tue, 09 Oct 2007 17:14:51 GMT"/>		<outline text="&lt;a href=&quot;http://michael-mccracken.net/wp/2007/10/09/the-editing-pass/&quot;&gt;Michael McCracken&lt;/a&gt;: &quot;Once you get a piece of code to the point where you believe it works - it's passing its tests - go back over it and edit it. That is, go back and edit it for clarity, flow, and style. Just as if it were an essay.&quot;" created="Wed, 10 Oct 2007 04:28:20 GMT"/>		<outline text="This is something I just don't hear enough of - code as writing, code as communication.  While I don't always make time to polish as much as I'd like, I'm always thinking about things like narrative and flow of a file of source code as well as the aesthetic shape and form of the code.  Code is fiction, code is poetry.  Compilation free of syntax and parse errors is baseline competence - and sometimes just good luck.  Apparent correct operation is not good enough: Moving on before the code has beauty is a poverty.  Ugly code kills motivation and comprehension - which attracts bugs and induces a downward spiral in morale.  Unit tests clear the way for courage and bravery; beauty yields living code worth fighting for." created="Wed, 10 Oct 2007 04:28:43 GMT"/>		</body>	</opml>