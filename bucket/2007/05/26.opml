<?xml version="1.0" encoding="ISO-8859-1"?><!-- OPML generated by OPML Editor v10.1a13 on Sat, 26 May 2007 19:46:48 GMT -->
<opml version="1.1">	<head>		<title>26.opml</title>		<dateCreated>Sat, 26 May 2007 18:45:02 GMT</dateCreated>		<dateModified>Sat, 26 May 2007 19:46:48 GMT</dateModified>		<ownerName>l.m.orchard</ownerName>		<ownerEmail>l.m.orchard@pobox.com</ownerEmail>		<expansionState>1, 3</expansionState>		<vertScrollState>1</vertScrollState>		<windowTop>102</windowTop>		<windowLeft>634</windowLeft>		<windowBottom>873</windowBottom>		<windowRight>1204</windowRight>		</head>	<body>		<outline text="The point of my web services ramble" created="Sat, 26 May 2007 18:55:22 GMT">			<outline text="Yesterday, I rambled at length about web services as I've played with them thus far.  I kind of ran out of steam before I got to the eventual point." created="Sat, 26 May 2007 18:49:44 GMT"/>			<outline text="Here are some of the cliff notes:" created="Sat, 26 May 2007 18:51:59 GMT">				<outline text="If you're going to do RPC-over-web, you might as well use XML-RPC." created="Sat, 26 May 2007 18:54:52 GMT"/>				<outline text="SOAP is a failure, in my experience.  It took the good bits of XML-RPC and rocketed off into space with architecture astronauts at the helm.  Others have detailed this much better than I have or will." created="Sat, 26 May 2007 18:54:27 GMT"/>				<outline text="In POX, the pattern of HTTP GET query parameters and XML response is fairly well trodden.  But, you still need to build a bespoke handler for each service's XML - as opposed to XML-RPC's easy path straight to native scripting language data structures." created="Sat, 26 May 2007 18:57:49 GMT"/>				<outline text="Unlike POX-style APIs, XML-RPC at least gives you some convenient reusable abstractions on parameter and return value marshalling without requiring you to cobble up a bespoke client library every time." created="Sat, 26 May 2007 18:55:13 GMT"/>				<outline text="Of course, neither straight POX nor XML-RPC offer an easy way to reusably do authentication, error handling, or much else beyond function calls." created="Sat, 26 May 2007 19:06:12 GMT"/>				<outline text="POX can use HTTP error codes and authentication, but often doesn't use either." created="Sat, 26 May 2007 19:41:52 GMT"/>				<outline text="XML-RPC offers an exception mechanism, but stops at the point of offering advice of what to do with it - which is fine, really, because anything can happen when you call a function.  Authentication, though, usually boils down to a couple of extra parameters on every call.  That's serviceable, but I think could be better." created="Sat, 26 May 2007 19:42:01 GMT"/>				<outline text="But in any case, bespoke solutions make it hard to develop reusable abstractions and conventions." created="Sat, 26 May 2007 19:00:03 GMT"/>				</outline>			<outline text="So, that brings me around to REST - which I think has an answer to just about all of the other styles' problems.  More on that soon." created="Sat, 26 May 2007 19:05:10 GMT"/>			</outline>		<outline text="Off to get some lunch with the girl, then maybe I'll finish this line of thought and think about bundling it up into a more coherent blog post." created="Sat, 26 May 2007 19:42:46 GMT"/>		<outline text="Also, thanks for bearing with me, if you're reading this rambling.  :)" created="Sat, 26 May 2007 19:45:49 GMT"/>		<outline text="Hello world.  It's Saturday morning Star Trek rerun time." created="Sat, 26 May 2007 18:45:02 GMT"/>		</body>	</opml>